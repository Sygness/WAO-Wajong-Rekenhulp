import javax.swing.JOptionPane;

/**
 * Opstartklasse van applicatie. Applicatie geeft gebruiker de mogelijkheid een schatting te maken van
 * de hoogte van een WAO-, of Wajong-uitkering bij gegeven inkomsten.
 * Opstartklasse opent een grafische interface en bepaalt het gedrag van de diverse onderdelen van
 * die grafische applicatie.
 * @author Sanne Lazaroms
 * 10 april 2024, geschreven als eindopdracht voor de cursus Ontwerpen en Programmeren van NCOI.
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        buttonGroupLoonperiodeKeuze = new javax.swing.ButtonGroup();
        buttonGroupLoonperiodeWajongWerk = new javax.swing.ButtonGroup();
        buttonGroupLoonperiodeWajongOverig = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        waoTab = new javax.swing.JPanel();
        basisgegevensWao = new javax.swing.JPanel();
        waoBasisWissenButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rdagloonTextfield = new javax.swing.JTextField();
        klasseKeuzeComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        mmlTextfield = new javax.swing.JTextField();
        waoBasisOpslaanButton = new javax.swing.JButton();
        waoGegevensLabel1 = new javax.swing.JLabel();
        waoGegevensLabel2 = new javax.swing.JLabel();
        waoGegevensLabel3 = new javax.swing.JLabel();
        berekeningWao = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        maxWaoUitkeringTextfield = new javax.swing.JTextField();
        berekenWaoUitkeringButton = new javax.swing.JButton();
        jaarKeuzeComboBox = new javax.swing.JComboBox<>();
        maandKeuzeComboBox = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        inkomstenCheckbox = new javax.swing.JCheckBox();
        nieuweWaoBerekeningButton = new javax.swing.JButton();
        waoInkomstenPaneel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        waoInkomstenTextfield = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        inkMndRadioButtonWao = new javax.swing.JRadioButton();
        ink4wkRadioButtonWao = new javax.swing.JRadioButton();
        inkWkRadioButtonWao = new javax.swing.JRadioButton();
        jLabel24 = new javax.swing.JLabel();
        berekendWaoUitkeringTextfield = new javax.swing.JTextField();
        waoBerekeningInfoLabel1 = new javax.swing.JLabel();
        waoBerekeningInfoLabel2 = new javax.swing.JLabel();
        wajongTab = new javax.swing.JPanel();
        basisgegevensWajong = new javax.swing.JPanel();
        wajongBasisWissenButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        wajongBasisOpslaanButton = new javax.swing.JButton();
        wajongGegevensLabel1 = new javax.swing.JLabel();
        wajongGegevensLabel2 = new javax.swing.JLabel();
        wajongGegevensLabel3 = new javax.swing.JLabel();
        arbeidsvermogenCheckBox = new javax.swing.JCheckBox();
        garantiebedragCheckBox = new javax.swing.JCheckBox();
        loondispensatieCheckBox = new javax.swing.JCheckBox();
        gbHoogtePerDagLabel = new javax.swing.JLabel();
        loonwaardeLabel = new javax.swing.JLabel();
        garantiebedragTextfield = new javax.swing.JTextField();
        loonwaardePercentageTextfield = new javax.swing.JTextField();
        berekeningWajong = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        maxWajongUitkeringTextfield = new javax.swing.JTextField();
        berekenWajongUitkeringButton = new javax.swing.JButton();
        wajongJaarKeuzeComboBox = new javax.swing.JComboBox<>();
        wajongMaandKeuzeComboBox = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        wajongInkomstenCheckbox = new javax.swing.JCheckBox();
        nieuweWajongBerekeningButton = new javax.swing.JButton();
        wajongInkomstenPaneel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        wajongInkomstenTextfield = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        inkMndRadioButtonWajong = new javax.swing.JRadioButton();
        ink4wkRadioButtonWajong = new javax.swing.JRadioButton();
        inkWkRadioButtonWajong = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        berekendWajongUitkeringTextfield = new javax.swing.JTextField();
        inkMndRadioButtonWajong1 = new javax.swing.JRadioButton();
        ink4wkRadioButtonWajong1 = new javax.swing.JRadioButton();
        inkWkRadioButtonWajong1 = new javax.swing.JRadioButton();
        wajongOverigeInkomstenTextfield = new javax.swing.JTextField();
        wajongBerekeningInfoLabel1 = new javax.swing.JLabel();
        wajongBerekeningInfoLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        berekenWaoMenuItem = new javax.swing.JMenuItem();
        berekenWajongMenuItem = new javax.swing.JMenuItem();
        afsluitenMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        helpAlgemeenMenuItem = new javax.swing.JMenuItem();
        helpWaoMenuItem = new javax.swing.JMenuItem();
        helpWajongMenuItem = new javax.swing.JMenuItem();
        helpSamenloopMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rekenhulp");

        basisgegevensWao.setBorder(javax.swing.BorderFactory.createTitledBorder("Basisgegevens"));

        waoBasisWissenButton.setText("Basisgegevens wissen");
        waoBasisWissenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waoBasisWissenButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Klasse");

        jLabel7.setText("Maatmanloon");

        jLabel8.setText("Op 1 januari 2015");

        rdagloonTextfield.setToolTipText("Vul hier uw rekendagloon in over de periode dat u uw uitkering wilt berekenen.");
        rdagloonTextfield.setCaretColor(new java.awt.Color(0, 0, 0));

        klasseKeuzeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "1: 15-25%", "2: 25-35%", "3: 35-45%", "4: 45-55%", "5: 55-65%", "6: 65-80%", "7: 80-100%" }));
        klasseKeuzeComboBox.setToolTipText("Kies uw AO-klasse.");

        jLabel9.setText("Rekendagloon");

        mmlTextfield.setToolTipText("Vul hier uw maatmanloon per 1 januari 2015 in.");

        waoBasisOpslaanButton.setText("Basisgegevens opslaan");
        waoBasisOpslaanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waoBasisOpslaanButtonActionPerformed(evt);
            }
        });

        waoGegevensLabel1.setText("Vul de basisgegevens over uw uitkering in en klik op \"Basisgegevens opslaan\".");

        waoGegevensLabel2.setText(" ");

        waoGegevensLabel3.setText(" ");

        javax.swing.GroupLayout basisgegevensWaoLayout = new javax.swing.GroupLayout(basisgegevensWao);
        basisgegevensWao.setLayout(basisgegevensWaoLayout);
        basisgegevensWaoLayout.setHorizontalGroup(
                basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(basisgegevensWaoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(basisgegevensWaoLayout.createSequentialGroup()
                                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel9)
                                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(klasseKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(rdagloonTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(basisgegevensWaoLayout.createSequentialGroup()
                                                                .addComponent(mmlTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(30, 30, 30)
                                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(waoBasisOpslaanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(waoBasisWissenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(waoGegevensLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                                                .addComponent(waoGegevensLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(waoGegevensLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        basisgegevensWaoLayout.setVerticalGroup(
                basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basisgegevensWaoLayout.createSequentialGroup()
                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(basisgegevensWaoLayout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel6)
                                                        .addComponent(klasseKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel9)
                                                        .addComponent(rdagloonTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(basisgegevensWaoLayout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addComponent(waoBasisOpslaanButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(waoBasisWissenButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(basisgegevensWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(mmlTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(waoGegevensLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(waoGegevensLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(waoGegevensLabel3))
        );

        berekeningWao.setBorder(javax.swing.BorderFactory.createTitledBorder("Berekening"));

        jLabel11.setText("Volledige maanduitkering:");

        jLabel13.setText("Maand en jaar");

        maxWaoUitkeringTextfield.setEditable(false);
        maxWaoUitkeringTextfield.setBackground(new java.awt.Color(204, 204, 204));

        berekenWaoUitkeringButton.setText("Bereken uitkering");
        berekenWaoUitkeringButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                berekenWaoUitkeringButtonActionPerformed(evt);
            }
        });

        jaarKeuzeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023", "2024" }));
        jaarKeuzeComboBox.setToolTipText("Kies de maand en en het jaar waarover u uw uitkering wilt berekenen.");

        maandKeuzeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december" }));
        maandKeuzeComboBox.setToolTipText("Kies de maand en en het jaar waarover u uw uitkering wilt berekenen.");

        jLabel10.setText("Inkomsten");

        inkomstenCheckbox.setToolTipText("Vink aan als u inkomsten heeft naast uw WAO-uitkering.");
        inkomstenCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inkomstenCheckboxActionPerformed(evt);
            }
        });

        nieuweWaoBerekeningButton.setText("Nieuwe berekening");
        nieuweWaoBerekeningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nieuweWaoBerekeningButtonActionPerformed(evt);
            }
        });

        waoInkomstenPaneel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                waoInkomstenPaneelComponentAdded(evt);
            }
        });

        jLabel22.setText("Inkomsten");

        waoInkomstenTextfield.setToolTipText("Vul hier uw inkomsten in, inclusief opgebouwd vakantiegeld.");

        jLabel23.setText("Periode");

        buttonGroupLoonperiodeKeuze.add(inkMndRadioButtonWao);
        inkMndRadioButtonWao.setText("Per maand");

        buttonGroupLoonperiodeKeuze.add(ink4wkRadioButtonWao);
        ink4wkRadioButtonWao.setText("Per 4 weken");

        buttonGroupLoonperiodeKeuze.add(inkWkRadioButtonWao);
        inkWkRadioButtonWao.setText("Per week");

        jLabel24.setText("Maanduitkering bij opgegeven inkomsten:");

        berekendWaoUitkeringTextfield.setEditable(false);
        berekendWaoUitkeringTextfield.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout waoInkomstenPaneelLayout = new javax.swing.GroupLayout(waoInkomstenPaneel);
        waoInkomstenPaneel.setLayout(waoInkomstenPaneelLayout);
        waoInkomstenPaneelLayout.setHorizontalGroup(
                waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(waoInkomstenPaneelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(waoInkomstenPaneelLayout.createSequentialGroup()
                                                .addGroup(waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(34, 34, 34)
                                                .addGroup(waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(waoInkomstenPaneelLayout.createSequentialGroup()
                                                                .addComponent(inkMndRadioButtonWao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(ink4wkRadioButtonWao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(inkWkRadioButtonWao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(waoInkomstenTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(117, Short.MAX_VALUE))
                                        .addGroup(waoInkomstenPaneelLayout.createSequentialGroup()
                                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(berekendWaoUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(44, 44, 44))))
        );
        waoInkomstenPaneelLayout.setVerticalGroup(
                waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(waoInkomstenPaneelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel22)
                                        .addComponent(waoInkomstenTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel23)
                                        .addComponent(inkMndRadioButtonWao)
                                        .addComponent(ink4wkRadioButtonWao)
                                        .addComponent(inkWkRadioButtonWao))
                                .addGap(18, 18, 18)
                                .addGroup(waoInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel24)
                                        .addComponent(berekendWaoUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(30, Short.MAX_VALUE))
        );

        waoBerekeningInfoLabel1.setText("Vul de gegevens in over de maand waarin u uw uitkering wilt berekenen, en klik op \"Bereken uitkering\".");

        waoBerekeningInfoLabel2.setText(" ");

        javax.swing.GroupLayout berekeningWaoLayout = new javax.swing.GroupLayout(berekeningWao);
        berekeningWao.setLayout(berekeningWaoLayout);
        berekeningWaoLayout.setHorizontalGroup(
                berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(12, 12, 12)
                                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                                                .addComponent(maandKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jaarKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(101, 101, 101)
                                                                .addComponent(nieuweWaoBerekeningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, berekeningWaoLayout.createSequentialGroup()
                                                                .addComponent(inkomstenCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(maxWaoUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(berekenWaoUitkeringButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addGap(226, 226, 226))
                                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(waoInkomstenPaneel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(waoBerekeningInfoLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                                                        .addComponent(waoBerekeningInfoLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        berekeningWaoLayout.setVerticalGroup(
                berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(berekeningWaoLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(jaarKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(maandKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nieuweWaoBerekeningButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(berekenWaoUitkeringButton)
                                        .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(inkomstenCheckbox)
                                                .addComponent(jLabel10)))
                                .addGap(27, 27, 27)
                                .addGroup(berekeningWaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(maxWaoUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(waoInkomstenPaneel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(waoBerekeningInfoLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(waoBerekeningInfoLabel2)
                                .addContainerGap(140, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout waoTabLayout = new javax.swing.GroupLayout(waoTab);
        waoTab.setLayout(waoTabLayout);
        waoTabLayout.setHorizontalGroup(
                waoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(waoTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(waoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(basisgegevensWao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(berekeningWao, javax.swing.GroupLayout.PREFERRED_SIZE, 764, Short.MAX_VALUE)))
        );
        waoTabLayout.setVerticalGroup(
                waoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(waoTabLayout.createSequentialGroup()
                                .addComponent(basisgegevensWao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(berekeningWao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("WAO-uitkering", waoTab);

        basisgegevensWajong.setBorder(javax.swing.BorderFactory.createTitledBorder("Basisgegevens"));
        basisgegevensWajong.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                basisgegevensWajongComponentAdded(evt);
            }
        });

        wajongBasisWissenButton.setText("Basisgegevens wissen");
        wajongBasisWissenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wajongBasisWissenButtonActionPerformed(evt);
            }
        });

        jLabel12.setText("Arbeidsvermogen");

        jLabel14.setText("Loondispensatie");

        jLabel16.setText("Garantiebedrag");

        wajongBasisOpslaanButton.setText("Basisgegevens opslaan");
        wajongBasisOpslaanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wajongBasisOpslaanButtonActionPerformed(evt);
            }
        });

        wajongGegevensLabel1.setText("Vul de basisgegevens over uw uitkering in en klik op \"Basisgegevens opslaan\".");

        wajongGegevensLabel2.setText(" ");

        wajongGegevensLabel3.setText(" ");

        arbeidsvermogenCheckBox.setSelected(true);
        arbeidsvermogenCheckBox.setToolTipText("Vinkje weghalen als u geen arbeidsvermogen heeft.");
        arbeidsvermogenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbeidsvermogenCheckBoxActionPerformed(evt);
            }
        });

        garantiebedragCheckBox.setToolTipText("Aanvinken als u een garantiebedrag heeft.");
        garantiebedragCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                garantiebedragCheckBoxActionPerformed(evt);
            }
        });

        loondispensatieCheckBox.setToolTipText("Aanvinken als uw werkgever loondispensatie op uw loon toepast.");
        loondispensatieCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loondispensatieCheckBoxActionPerformed(evt);
            }
        });

        gbHoogtePerDagLabel.setText("Hoogte per dag");

        loonwaardeLabel.setText("Loonwaardepercentage");

        garantiebedragTextfield.setEditable(false);
        garantiebedragTextfield.setToolTipText("Vul uw garantiebedrag in euro per dag hier in.");

        loonwaardePercentageTextfield.setEditable(false);
        loonwaardePercentageTextfield.setToolTipText("Vul uw loonwaardepercentage in als getal tussen 1 en 100, bijvoorbeeld 45,67.");

        javax.swing.GroupLayout basisgegevensWajongLayout = new javax.swing.GroupLayout(basisgegevensWajong);
        basisgegevensWajong.setLayout(basisgegevensWajongLayout);
        basisgegevensWajongLayout.setHorizontalGroup(
                basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basisgegevensWajongLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(basisgegevensWajongLayout.createSequentialGroup()
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(wajongGegevensLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                                                                .addComponent(wajongGegevensLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(wajongGegevensLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(15, 15, 15))
                                        .addGroup(basisgegevensWajongLayout.createSequentialGroup()
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel16)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(garantiebedragCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(arbeidsvermogenCheckBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(loondispensatieCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(loonwaardeLabel)
                                                        .addComponent(gbHoogtePerDagLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(garantiebedragTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(loonwaardePercentageTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(wajongBasisOpslaanButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(wajongBasisWissenButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(79, 79, 79))))
        );
        basisgegevensWajongLayout.setVerticalGroup(
                basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basisgegevensWajongLayout.createSequentialGroup()
                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(basisgegevensWajongLayout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel12)
                                                        .addComponent(arbeidsvermogenCheckBox))
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(basisgegevensWajongLayout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel16)
                                                                        .addComponent(garantiebedragCheckBox)))
                                                        .addGroup(basisgegevensWajongLayout.createSequentialGroup()
                                                                .addGap(13, 13, 13)
                                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(gbHoogtePerDagLabel)
                                                                        .addComponent(garantiebedragTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addGap(18, 18, 18)
                                                .addGroup(basisgegevensWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel14)
                                                        .addComponent(loondispensatieCheckBox)
                                                        .addComponent(loonwaardeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(loonwaardePercentageTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basisgegevensWajongLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(wajongBasisOpslaanButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(wajongBasisWissenButton)
                                                .addGap(29, 29, 29)))
                                .addComponent(wajongGegevensLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wajongGegevensLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(wajongGegevensLabel3))
        );

        berekeningWajong.setBorder(javax.swing.BorderFactory.createTitledBorder("Berekening"));

        jLabel17.setText("Volledige maanduitkering:");

        jLabel18.setText("Maand en jaar");

        maxWajongUitkeringTextfield.setEditable(false);
        maxWajongUitkeringTextfield.setBackground(new java.awt.Color(204, 204, 204));

        berekenWajongUitkeringButton.setText("Bereken uitkering");
        berekenWajongUitkeringButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                berekenWajongUitkeringButtonActionPerformed(evt);
            }
        });

        wajongJaarKeuzeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023", "2024" }));
        wajongJaarKeuzeComboBox.setToolTipText("Kies de maand en en het jaar waarover u uw uitkering wilt berekenen.");

        wajongMaandKeuzeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december" }));
        wajongMaandKeuzeComboBox.setToolTipText("Kies de maand en en het jaar waarover u uw uitkering wilt berekenen.");

        jLabel19.setText("Inkomsten");

        wajongInkomstenCheckbox.setToolTipText("Vink aan als u inkomsten heeft naast uw Wajong-uitkering.");
        wajongInkomstenCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wajongInkomstenCheckboxActionPerformed(evt);
            }
        });

        nieuweWajongBerekeningButton.setText("Nieuwe berekening");
        nieuweWajongBerekeningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nieuweWajongBerekeningButtonActionPerformed(evt);
            }
        });

        wajongInkomstenPaneel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                wajongInkomstenPaneelComponentAdded(evt);
            }
        });

        jLabel25.setText("Inkomsten uit werk");

        wajongInkomstenTextfield.setToolTipText("Vul hier uw inkomsten uit werk in, exclusief vakantiegeld.");

        jLabel26.setText("Overige inkomsten");

        buttonGroupLoonperiodeWajongWerk.add(inkMndRadioButtonWajong);
        inkMndRadioButtonWajong.setSelected(true);
        inkMndRadioButtonWajong.setText("Per maand");

        buttonGroupLoonperiodeWajongWerk.add(ink4wkRadioButtonWajong);
        ink4wkRadioButtonWajong.setText("Per 4 weken");

        buttonGroupLoonperiodeWajongWerk.add(inkWkRadioButtonWajong);
        inkWkRadioButtonWajong.setText("Per week");

        jLabel27.setText("Maanduitkering bij opgegeven inkomsten:");

        berekendWajongUitkeringTextfield.setEditable(false);
        berekendWajongUitkeringTextfield.setBackground(new java.awt.Color(204, 204, 204));

        buttonGroupLoonperiodeWajongOverig.add(inkMndRadioButtonWajong1);
        inkMndRadioButtonWajong1.setSelected(true);
        inkMndRadioButtonWajong1.setText("Per maand");

        buttonGroupLoonperiodeWajongOverig.add(ink4wkRadioButtonWajong1);
        ink4wkRadioButtonWajong1.setText("Per 4 weken");

        buttonGroupLoonperiodeWajongOverig.add(inkWkRadioButtonWajong1);
        inkWkRadioButtonWajong1.setText("Per week");

        wajongOverigeInkomstenTextfield.setText("0");
        wajongOverigeInkomstenTextfield.setToolTipText("Vul hier uw eventuele Wao-uitkering of inkomsten zonder loondispensatie in.");

        javax.swing.GroupLayout wajongInkomstenPaneelLayout = new javax.swing.GroupLayout(wajongInkomstenPaneel);
        wajongInkomstenPaneel.setLayout(wajongInkomstenPaneelLayout);
        wajongInkomstenPaneelLayout.setHorizontalGroup(
                wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(wajongInkomstenPaneelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(wajongInkomstenPaneelLayout.createSequentialGroup()
                                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel25)
                                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(wajongInkomstenTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                                        .addComponent(wajongOverigeInkomstenTextfield))
                                                .addGap(18, 18, 18)
                                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(wajongInkomstenPaneelLayout.createSequentialGroup()
                                                                .addComponent(inkMndRadioButtonWajong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(ink4wkRadioButtonWajong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(inkWkRadioButtonWajong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(wajongInkomstenPaneelLayout.createSequentialGroup()
                                                                .addComponent(inkMndRadioButtonWajong1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(ink4wkRadioButtonWajong1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(inkWkRadioButtonWajong1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(wajongInkomstenPaneelLayout.createSequentialGroup()
                                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32)
                                                .addComponent(berekendWajongUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(16, Short.MAX_VALUE))
        );
        wajongInkomstenPaneelLayout.setVerticalGroup(
                wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wajongInkomstenPaneelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel25)
                                        .addComponent(wajongInkomstenTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(inkMndRadioButtonWajong)
                                        .addComponent(ink4wkRadioButtonWajong)
                                        .addComponent(inkWkRadioButtonWajong))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel26)
                                        .addComponent(inkMndRadioButtonWajong1)
                                        .addComponent(ink4wkRadioButtonWajong1)
                                        .addComponent(inkWkRadioButtonWajong1)
                                        .addComponent(wajongOverigeInkomstenTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addGroup(wajongInkomstenPaneelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(berekendWajongUitkeringTextfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        wajongBerekeningInfoLabel1.setText("Vul de gegevens in over de maand waarin u uw uitkering wilt berekenen, en klik op \"Bereken uitkering\".");

        wajongBerekeningInfoLabel2.setText(" ");

        javax.swing.GroupLayout berekeningWajongLayout = new javax.swing.GroupLayout(berekeningWajong);
        berekeningWajong.setLayout(berekeningWajongLayout);
        berekeningWajongLayout.setHorizontalGroup(
                berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(wajongInkomstenCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                                                .addComponent(wajongMaandKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(wajongJaarKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(nieuweWajongBerekeningButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(berekenWajongUitkeringButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(84, 84, 84))
                                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(77, 77, 77)
                                                .addComponent(maxWajongUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(wajongInkomstenPaneel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(wajongBerekeningInfoLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(wajongBerekeningInfoLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        berekeningWajongLayout.setVerticalGroup(
                berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18)
                                        .addComponent(wajongJaarKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(wajongMaandKeuzeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nieuweWajongBerekeningButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(berekenWajongUitkeringButton)
                                        .addGroup(berekeningWajongLayout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(wajongInkomstenCheckbox)
                                                        .addComponent(jLabel19))))
                                .addGap(27, 27, 27)
                                .addGroup(berekeningWajongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(maxWajongUitkeringTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(wajongInkomstenPaneel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                                .addComponent(wajongBerekeningInfoLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wajongBerekeningInfoLabel2)
                                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout wajongTabLayout = new javax.swing.GroupLayout(wajongTab);
        wajongTab.setLayout(wajongTabLayout);
        wajongTabLayout.setHorizontalGroup(
                wajongTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(wajongTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(wajongTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(basisgegevensWajong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(berekeningWajong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        wajongTabLayout.setVerticalGroup(
                wajongTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(wajongTabLayout.createSequentialGroup()
                                .addComponent(basisgegevensWajong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(berekeningWajong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jTabbedPane1.addTab("Wajong-uitkering", wajongTab);

        jMenu1.setText("Bestand");
        jMenu1.setToolTipText("");

        berekenWaoMenuItem.setText("Bereken WAO-uitkering");
        berekenWaoMenuItem.setToolTipText("");
        berekenWaoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                berekenWaoMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(berekenWaoMenuItem);

        berekenWajongMenuItem.setText("Bereken Wajong-uitkering");
        berekenWajongMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                berekenWajongMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(berekenWajongMenuItem);

        afsluitenMenuItem.setText("Afsluiten");
        afsluitenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afsluitenMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(afsluitenMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.setToolTipText("");

        helpAlgemeenMenuItem.setText("Wat doet deze tool?");
        helpAlgemeenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpAlgemeenMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(helpAlgemeenMenuItem);

        helpWaoMenuItem.setText("Toelichting WAO");
        helpWaoMenuItem.setToolTipText("");
        helpWaoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpWaoMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(helpWaoMenuItem);

        helpWajongMenuItem.setText("Toelichting Wajong");
        helpWajongMenuItem.setToolTipText("");
        helpWajongMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpWajongMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(helpWajongMenuItem);

        helpSamenloopMenuItem.setText("Samenloop");
        helpSamenloopMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpSamenloopMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(helpSamenloopMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void afsluitenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    private void waoBasisOpslaanButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // velden uitlezen
        int klasse = klasseKeuzeComboBox.getSelectedIndex();
        String rekendagloon = GuiUtil.bedragCleanup(rdagloonTextfield.getText());
        String maatmanloon = GuiUtil.bedragCleanup(mmlTextfield.getText());

        // status klasse controleren
        if (klasse == 0) { // geen keuze gemaakt
            waoGegevensLabel1.setText("Vul uw uitkeringsklasse in.");
            GuiUtil.inputRejected(klasseKeuzeComboBox);

            if (Uitkering.acceptedDagloon(rekendagloon)) { // waarde is toegestaan
                waoGegevensLabel2.setText("Rekendagloon bewaard."); // bewaren door blokkeren tekstveld
                GuiUtil.inputAccepted(rdagloonTextfield);
            }
            else {  // format rekendagloon is niet goed, of waarde voldoet niet
                waoGegevensLabel2.setText("Uw rekendagloon moet een positief bedrag zijn van maximaal "
                        + Uitkering.bedragFormat(Uitkering.getMaximumDagloon()) + ".");
                GuiUtil.inputRejected(rdagloonTextfield);
            }
        }
        else { // keuze gemaakt, bewaren door veld te blokkeren
            waoGegevensLabel1.setText("Uitkeringsklasse bewaard.");
            GuiUtil.inputAccepted(klasseKeuzeComboBox);

            if (Uitkering.acceptedDagloon(rekendagloon)) { // waarde is toegestaan

                GuiUtil.inputAccepted(rdagloonTextfield);
                // WaoUitkering object kan nu aangemaakt worden
                wao = new WaoUitkering(rekendagloon,klasse);
                waoGegevensLabel1.setText("Gegevens opgeslagen. " + wao); // overschrijft label1
                waoGegevensLabel2.setText("Zonder maatmanloon kunt u nog niet met inkomsten rekenen.");
            }
            else {  // format is niet goed, of waarde voldoet niet
                waoGegevensLabel2.setText("Uw rekendagloon moet een positief bedrag zijn van maximaal "
                        + Uitkering.bedragFormat(Uitkering.getMaximumDagloon()) + ".");
                GuiUtil.inputRejected(rdagloonTextfield);
            }
        }

        // status maatmanloon controleren
        if (GuiUtil.isPositive(maatmanloon)) { // format goed en waarde is toegestaan
            waoGegevensLabel3.setText("Maatmanloon bewaard."); // bewaren door blokkeren tekstveld
            GuiUtil.inputAccepted(mmlTextfield);
            if (wao != null) { // er bestaat al een wao object. Klasse en rekendagloon zijn dus bekend.
                // maatmanloon toevoegen.
                wao.setMaatmanloon(maatmanloon);
                waoGegevensLabel2.setText("Maatmanloon ingesteld op " + Uitkering.bedragFormat(wao.getMaatmanloon()) + ".");
                waoGegevensLabel3.setText("Klik op \"Basisgegevens wissen\" als u met nieuwe gegevens wilt rekenen.");
            }
        }
        else { // niets ingevuld of waarde is niet goed als maatmanloon
            waoGegevensLabel3.setText("Uw maatmanloon moet een positief bedrag zijn.");
            GuiUtil.inputRejected(mmlTextfield);
        }
    }

    private void waoBasisWissenButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // basisgegevens deel resetten
        wao = null;
        GuiUtil.reset(klasseKeuzeComboBox);
        GuiUtil.reset(rdagloonTextfield);
        GuiUtil.reset(mmlTextfield);

        waoGegevensLabel1.setText("Vul de basisgegevens over uw uitkering in en klik op \"Basisgegevens opslaan\".");
        waoGegevensLabel2.setText("");
        waoGegevensLabel3.setText("");

        // inkomstendeel resetten
        resetWaoInkomstenPanel();
    }

    private void nieuweWaoBerekeningButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // inkomstendeel resetten
        resetWaoInkomstenPanel();
    }

    private void inkomstenCheckboxActionPerformed(java.awt.event.ActionEvent evt) {
        if (inkomstenCheckbox.isSelected()) {
            if (wao == null) { // geen berekening mogelijk zonder basisgegevens
                waoBerekeningInfoLabel1.setText("Vul eerst de basisgegevens over uw uitkering in en klik op \"Basisgegevens opslaan\".");
                inkomstenCheckbox.setSelected(false);
            }
            else {
                if (wao.getMaatmanloon() != null) {
                    waoInkomstenPaneel.setVisible(true);
                    waoBerekeningInfoLabel1.setText("Vul uw inkomsten in en geef aan over welke periode u die ontvangt.");
                    waoBerekeningInfoLabel2.setText("");
                }
                else { // als maatmanloon niet is ingesteld mag dit nog steeds niet geselecteerd worden
                    waoBerekeningInfoLabel1.setText("U moet eerst uw maatmanloon invullen en opslaan om met inkomsten te kunnen rekenen.");
                    waoBerekeningInfoLabel2.setText("Probeer het daarna nogmaals.");
                    inkomstenCheckbox.setSelected(false);
                }
            }
        }
        else { // dus gedeselecteerd, paneel uitzetten
            resetWaoInkomstenPanel();
        }
    }

    private void berekenWaoUitkeringButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // allereerst controleren of er wel een wao-object is opgeslagen
        if (wao == null) {
            waoBerekeningInfoLabel1.setText("Vul eerst de basisgegevens over uw uitkering " +
                    "in en klik op \"Basisgegevens opslaan\".");
            // inputvelden die ontbreken arceren:
            GuiUtil.inputRejected(klasseKeuzeComboBox);
            GuiUtil.inputRejected(rdagloonTextfield);
            return; // methode stoppen
        }

        // als inkomsten zijn gegeven wordt daarmee gerekend. Ter vergelijking wordt
        // ook de ongekorte uitkering weergegeven. Als er geen inkomsten zijn opgegeven
        // wordt alleen de volledige uitkering uitgerekend.
        String maand = maandKeuzeComboBox.getSelectedItem().toString();
        String jaar = jaarKeuzeComboBox.getSelectedItem().toString();
        String rekenmaand = GuiUtil.getRekenmaand(maand,jaar);
        if (wao.findIndex(rekenmaand) == null) {
            waoBerekeningInfoLabel2.setText("Berekening is alleen mogelijk over de periode " + wao.getCbsRange() + ".");
            return; // methode stoppen
        }
        else {
            GuiUtil.inputAccepted(maandKeuzeComboBox);
            GuiUtil.inputAccepted(jaarKeuzeComboBox);
        }

        if ((inkomstenCheckbox.isSelected()) && (wao.getMaatmanloon() != null)) { // gebruiker wil met inkomsten rekenen

            String inkomsten = GuiUtil.bedragCleanup(waoInkomstenTextfield.getText());

            if (GuiUtil.isPositive(inkomsten)) { // inkomsten zijn een geldig bedrag en niet null: akkoord
                GuiUtil.inputAccepted(waoInkomstenTextfield);
                if (inkMndRadioButtonWao.isSelected()) {
                    berekendWaoUitkeringTextfield.setText(Uitkering.bedragFormat(wao.getMaanduitkering(inkomsten,rekenmaand)));
                    waoBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " met inkomsten van " +
                            Uitkering.bedragFormat(BigDecimalUtil.create(inkomsten)) + " per maand.");
                    waoBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
                }
                else if (ink4wkRadioButtonWao.isSelected()) { // eerst omzetten naar maand om vergelijking met maatmanloon te kunnen maken
                    String maandloon = Uitkering.inkomstenWeekNaarMaand(inkomsten,4);
                    berekendWaoUitkeringTextfield.setText(Uitkering.bedragFormat(wao.getMaanduitkering(maandloon,rekenmaand)));
                    waoBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " met inkomsten van " +
                            Uitkering.bedragFormat(BigDecimalUtil.create(maandloon)) + " per maand.");
                    waoBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
                }
                else { // enig overgebleven optie is weekloon, omzetten naar maand
                    String maandloon = Uitkering.inkomstenWeekNaarMaand(inkomsten,1);
                    berekendWaoUitkeringTextfield.setText(Uitkering.bedragFormat(wao.getMaanduitkering(maandloon,rekenmaand)));
                    waoBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " met inkomsten van " +
                            Uitkering.bedragFormat(BigDecimalUtil.create(maandloon)) + " per maand.");
                    waoBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
                }
                // volledige uitkering alsnog geven ter vergelijking
                maxWaoUitkeringTextfield.setText(Uitkering.bedragFormat(wao.getMaanduitkering()));
            }
            else { // input voor inkomsten is niet juist
                waoBerekeningInfoLabel1.setText("Uw inkomsten moeten een positief bedrag zijn.");
                GuiUtil.inputRejected(waoInkomstenTextfield);
            }
        }
        else { // volledige maanduitkering, berekening zonder inkomsten
            maxWaoUitkeringTextfield.setText(Uitkering.bedragFormat(wao.getMaanduitkering()));
            waoBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " zonder inkomsten.");
            waoBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
        }
    }

    private void waoInkomstenPaneelComponentAdded(java.awt.event.ContainerEvent evt) {
        waoInkomstenPaneel.setVisible(false);
        inkMndRadioButtonWao.setSelected(true);
    }

    private void wajongBasisWissenButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // basisgegevens deel resetten
        wajong = null;
        arbeidsvermogenCheckBox.setSelected(true);
        arbeidsvermogenCheckBox.setEnabled(true);

        GuiUtil.reset(garantiebedragCheckBox);
        gbHoogtePerDagLabel.setVisible(false);
        garantiebedragTextfield.setVisible(false);
        GuiUtil.reset(garantiebedragTextfield);
        garantiebedragTextfield.setEditable(false); // nodig omdat opslaan dit checkt

        GuiUtil.reset(loondispensatieCheckBox);
        loonwaardeLabel.setVisible(false);
        loonwaardePercentageTextfield.setVisible(false);
        GuiUtil.reset(loonwaardePercentageTextfield);
        loonwaardePercentageTextfield.setEditable(false); // nodig omdat opslaan dit checkt

        wajongGegevensLabel1.setText("Vul de basisgegevens over uw uitkering in en klik op \"Basisgegevens opslaan\".");
        wajongGegevensLabel2.setText("");
        wajongGegevensLabel3.setText("");

        // inkomstendeel resetten
        resetWajongInkomstenPanel();
    }

    private void wajongBasisOpslaanButtonActionPerformed(java.awt.event.ActionEvent evt) {
        wajong = new WajongUitkering();

        // gegevens ophalen
        String gar = GuiUtil.bedragCleanup(garantiebedragTextfield.getText());
        String loonwaarde = GuiUtil.bedragCleanup(loonwaardePercentageTextfield.getText());

        if (!arbeidsvermogenCheckBox.isSelected()) {
            wajong.setArbeidsvermogen(false);
            GuiUtil.inputAccepted(arbeidsvermogenCheckBox);
        }

        // controle garantiebedrag gegevens
        if (garantiebedragCheckBox.isSelected()) { // gebruiker wil een garantiebedrag instellen
            if (gar != null) { // er is een leesbaar garantiebedrag ingevuld
                if (GuiUtil.isPositive(gar)) { // ingevuld garantiebedrag is positief
                    wajong.setGarantiebedrag(gar);
                    GuiUtil.inputAccepted(garantiebedragTextfield);
                    GuiUtil.inputAccepted(garantiebedragCheckBox);
                }
                else {
                    wajongGegevensLabel2.setText("Uw garantiebedrag moet een positief bedrag zijn. Garantiebedrag niet " +
                            "ingesteld, probeer het opnieuw.");
                    GuiUtil.inputRejected(garantiebedragTextfield);
                }
            }
            else {
                wajongGegevensLabel2.setText("Uw garantiebedrag moet een positief bedrag zijn. Garantiebedrag niet " +
                        "ingesteld, probeer het opnieuw.");
                GuiUtil.inputRejected(garantiebedragTextfield);
            }
        }

        // controle loondispensatie gegevens
        if (loondispensatieCheckBox.isSelected()) { // gebruiker wil een percentage loondispensatie instellen
            if (loonwaarde != null) { // er is een leesbare loonwaarde ingevuld
                if (GuiUtil.isPercentage(loonwaarde)) { // true als boven 0 en max 100
                    wajong.setLoondispensatie(loonwaarde);
                    GuiUtil.inputAccepted(loonwaardePercentageTextfield);
                    GuiUtil.inputAccepted(loondispensatieCheckBox);
                }
                else {
                    wajongGegevensLabel3.setText("Uw loonwaarde moet een getal tussen 0 en 100 zijn. Loonwaarde niet " +
                            "ingesteld, probeer het opnieuw.");
                    GuiUtil.inputRejected(loonwaardePercentageTextfield);
                }
            }
            else {
                wajongGegevensLabel3.setText("Uw loonwaarde moet een getal tussen 0 en 100 zijn. Loonwaarde niet " +
                        "ingesteld, probeer het opnieuw.");
                GuiUtil.inputRejected(loonwaardePercentageTextfield);
            }
        }

        // controle welke variatie aan de orde is voor al dan niet correcte input:
        if (!garantiebedragTextfield.isEditable() && !loonwaardePercentageTextfield.isEditable()) {
            // dit is alleen waar als het veld niet nodig is, of input geaccepteerd is.
            // deze controle voorkomt dat er verder gerekend wordt, of feedback in labels overschreven,
            // als gegevens niet compleet of juist zijn.
            wajongGegevensLabel1.setText("Gegevens opgeslagen.");
            wajongGegevensLabel2.setText(wajong.toString());
            wajongGegevensLabel3.setText("Klik op \"Basisgegevens wissen\" als u met nieuwe gegevens wilt rekenen.");
        }
        else {
            wajongGegevensLabel1.setText("Gegevens niet opgeslagen.");
            if (wajongGegevensLabel2.getText().startsWith("Wajong")) { // in dit geval is eerder iets opgeslagen
                wajongGegevensLabel2.setText(""); // nu foutieve feedback wissen
            }
            wajong = null;
        }
    }

    private void berekenWajongUitkeringButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // stap 1: Controleren of er een WajongUitkering-object is aangemaakt
        if (wajong == null) {
            wajongBerekeningInfoLabel1.setText("Vul eerst de basisgegevens over uw uitkering " +
                    "in en klik op \"Basisgegevens opslaan\".");
            wajongGegevensLabel2.setText("");
            return;
        }
        else {
            GuiUtil.inputAccepted(arbeidsvermogenCheckBox);
            GuiUtil.inputAccepted(garantiebedragCheckBox);
            GuiUtil.inputAccepted(loondispensatieCheckBox);
            wajong.setOverigeInkomstenPerDag("0"); // dit is nodig omdat anders niet gereset wordt als enkel periode wordt aangepast en niet gewist tussendoor
        }

        // stap 2: gegevens uit berekenpaneel inlezen
        String maand = wajongMaandKeuzeComboBox.getSelectedItem().toString();
        String jaar = wajongJaarKeuzeComboBox.getSelectedItem().toString();
        String rekenmaand = GuiUtil.getRekenmaand(maand,jaar);
        if (wajong.getGrondslag(rekenmaand) == null) {
            wajongBerekeningInfoLabel2.setText("Berekening is alleen mogelijk over de periode " + wajong.getGrondslagRange() + ".");
            return; // berekening niet mogelijk, geen grondslag bekend over gekozen maand
        }
        else {
            GuiUtil.inputAccepted(wajongMaandKeuzeComboBox);
            GuiUtil.inputAccepted(wajongJaarKeuzeComboBox);
        }

        if (wajongInkomstenCheckbox.isSelected()) { // gebruiker wil met inkomsten rekenen

            // inkomstengegevens ophalen en omzetten naar maand
            // overige inkomsten eerst ophalen en opslaan in wajong-object
            String inkomstenOverig = GuiUtil.bedragCleanup(wajongOverigeInkomstenTextfield.getText());
            String inkomstenOverigMnd = "0"; // placeholder voor gebruiker feedback

            if (inkomstenOverig == null) {
                GuiUtil.inputRejected(wajongOverigeInkomstenTextfield);
                wajongBerekeningInfoLabel2.setText("Overige inkomsten moeten een positief bedrag zijn, of " +
                        "nul als u die geen heeft.");
            }
            else {
                if (GuiUtil.isPositive(inkomstenOverig)) {
                    GuiUtil.inputAccepted(wajongOverigeInkomstenTextfield);
                    if (inkMndRadioButtonWajong1.isSelected()) { // bedrag is per maand
                        wajong.setOverigeInkomstenPerDag(inkomstenOverig);
                        inkomstenOverigMnd = inkomstenOverig;
                    }
                    else if (ink4wkRadioButtonWajong1.isSelected()) { // 4wk-loon
                        inkomstenOverigMnd = Uitkering.inkomstenWeekNaarMaand(inkomstenOverig,4);
                        wajong.setOverigeInkomstenPerDag(inkomstenOverigMnd);
                    }
                    else {  // dus per week
                        inkomstenOverigMnd = Uitkering.inkomstenWeekNaarMaand(inkomstenOverig,1);
                        wajong.setOverigeInkomstenPerDag(inkomstenOverigMnd);
                    }
                }
                else if (inkomstenOverig.contentEquals("0")) {  // default waarde, akkoord, niet in gebruik
                    GuiUtil.inputAccepted(wajongOverigeInkomstenTextfield);
                    wajongBerekeningInfoLabel2.setText("");
                }
                else {  // input niet leesbaar als correct bedrag
                    GuiUtil.inputRejected(wajongOverigeInkomstenTextfield);
                    wajongBerekeningInfoLabel2.setText("Overige inkomsten moeten een positief bedrag zijn, of " +
                            "nul als u die geen heeft.");
                    return;
                }
            }

            if (GuiUtil.isPositive(inkomstenOverig)) {
                GuiUtil.inputAccepted(wajongOverigeInkomstenTextfield);
                if (inkMndRadioButtonWajong1.isSelected()) { // bedrag is per maand
                    wajong.setOverigeInkomstenPerDag(inkomstenOverig);
                    inkomstenOverigMnd = inkomstenOverig;
                }
                else if (ink4wkRadioButtonWajong1.isSelected()) { // 4wk-loon
                    inkomstenOverigMnd = Uitkering.inkomstenWeekNaarMaand(inkomstenOverig,4);
                    wajong.setOverigeInkomstenPerDag(inkomstenOverigMnd);
                }
                else {  // dus per week
                    inkomstenOverigMnd = Uitkering.inkomstenWeekNaarMaand(inkomstenOverig,1);
                    wajong.setOverigeInkomstenPerDag(inkomstenOverigMnd);
                }
            }
            else if (inkomstenOverig.contentEquals("0")) {  // default waarde, akkoord, niet in gebruik
                GuiUtil.inputAccepted(wajongOverigeInkomstenTextfield);
                wajongBerekeningInfoLabel2.setText("");
            }
            else {  // input niet leesbaar als correct bedrag
                GuiUtil.inputRejected(wajongOverigeInkomstenTextfield);
                wajongBerekeningInfoLabel2.setText("Overige inkomsten moeten een positief bedrag zijn, of " +
                        "nul als u die geen heeft.");
                return;
            }

            String inkomstenWerk = GuiUtil.bedragCleanup(wajongInkomstenTextfield.getText());

            if (GuiUtil.isPositive(inkomstenWerk)) { // inkomsten uit werk geldig, positief bedrag
                GuiUtil.inputAccepted(wajongInkomstenTextfield);
                if (inkMndRadioButtonWajong.isSelected()) { // opgegeven loon is per maand
                    berekendWajongUitkeringTextfield.setText(Uitkering.bedragFormat(wajong.getMaanduitkering(inkomstenWerk,rekenmaand)));
                    wajongBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " met totale inkomsten van " +
                            Uitkering.bedragFormat(BigDecimalUtil.create(inkomstenWerk).add(BigDecimalUtil.create(inkomstenOverigMnd))) + " per maand.");
                    wajongBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
                }
                else if (ink4wkRadioButtonWajong.isSelected()) { // 4wk-loon
                    String maandloon = Uitkering.inkomstenWeekNaarMaand(inkomstenWerk,4);
                    berekendWajongUitkeringTextfield.setText(Uitkering.bedragFormat(wajong.getMaanduitkering(maandloon,rekenmaand)));
                    wajongBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " met totale inkomsten van " +
                            Uitkering.bedragFormat(BigDecimalUtil.create(maandloon).add(BigDecimalUtil.create(inkomstenOverigMnd))) + " per maand.");
                    wajongBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
                }
                else {  // dus weekloon
                    String maandloon = Uitkering.inkomstenWeekNaarMaand(inkomstenWerk,1);
                    berekendWajongUitkeringTextfield.setText(Uitkering.bedragFormat(wajong.getMaanduitkering(maandloon,rekenmaand)));
                    wajongBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " met totale inkomsten van " +
                            Uitkering.bedragFormat(BigDecimalUtil.create(maandloon).add(BigDecimalUtil.create(inkomstenOverigMnd))) + " per maand.");
                    wajongBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
                }
                // volledige uitkering alsnog geven ter vergelijking
                maxWajongUitkeringTextfield.setText(Uitkering.bedragFormat(wajong.getMaanduitkering(rekenmaand)));
            }
            else { // Inkomsten uit werk niet ingevuld of ongeldig
                wajongBerekeningInfoLabel1.setText("Uw inkomsten moeten een positief bedrag zijn.");
                GuiUtil.inputRejected(wajongInkomstenTextfield);
            }
        }
        else {  // gebruiker wil niet met inkomsten rekenen
            maxWajongUitkeringTextfield.setText(Uitkering.bedragFormat(wajong.getMaanduitkering(rekenmaand)));
            wajongBerekeningInfoLabel1.setText("Uitkering berekend over " + rekenmaand + " zonder inkomsten.");
            wajongBerekeningInfoLabel2.setText("Uitkeringsbedragen zijn bruto en exclusief vakantiegeld.");
        }
    }

    private void wajongInkomstenCheckboxActionPerformed(java.awt.event.ActionEvent evt) {
        if (wajongInkomstenCheckbox.isSelected()) {
            if (wajong == null) { // geen berekening mogelijk zonder basisgegevens
                wajongBerekeningInfoLabel1.setText("Vul eerst de basisgegevens over uw uitkering in en klik op \"Basisgegevens opslaan\".");
                wajongInkomstenCheckbox.setSelected(false);
            }
            else {
                wajongInkomstenPaneel.setVisible(true);
            }
        }
        else { // dus niet selected
            wajongInkomstenPaneel.setVisible(false);
        }
    }

    private void nieuweWajongBerekeningButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // inkomstendeel resetten
        resetWajongInkomstenPanel();
    }

    private void wajongInkomstenPaneelComponentAdded(java.awt.event.ContainerEvent evt) {
        wajongInkomstenPaneel.setVisible(false);
    }

    private void arbeidsvermogenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (arbeidsvermogenCheckBox.isSelected()) {
            loondispensatieCheckBox.setEnabled(true);
        }
        else { // zonder arbeidsvermogen kan en mag er niet met LD gerekend worden.
            loondispensatieCheckBox.setEnabled(false);
            loondispensatieCheckBox.setSelected(false);
            loonwaardeLabel.setVisible(false);
            loonwaardePercentageTextfield.setVisible(false);
        }
    }

    private void garantiebedragCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (garantiebedragCheckBox.isSelected()) {
            gbHoogtePerDagLabel.setVisible(true);
            garantiebedragTextfield.setVisible(true);
            garantiebedragTextfield.setEditable(true);
        }
        else {
            gbHoogtePerDagLabel.setVisible(false);
            garantiebedragTextfield.setVisible(false);
            GuiUtil.reset(garantiebedragTextfield);
            garantiebedragTextfield.setEditable(false);
        }
    }

    private void loondispensatieCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {
        if (loondispensatieCheckBox.isSelected()) {
            loonwaardeLabel.setVisible(true);
            loonwaardePercentageTextfield.setVisible(true);
            loonwaardePercentageTextfield.setEditable(true);
        }
        else {
            loonwaardeLabel.setVisible(false);
            loonwaardePercentageTextfield.setVisible(false);
            GuiUtil.reset(loonwaardePercentageTextfield);
            loonwaardePercentageTextfield.setEditable(false);
        }
    }

    private void berekenWaoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        jTabbedPane1.setSelectedIndex(0);
    }

    private void berekenWajongMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        jTabbedPane1.setSelectedIndex(1);
    }

    private void helpAlgemeenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        JOptionPane.showMessageDialog(jTabbedPane1, uitlegAlgemeen,
                "Wat doet deze tool?",JOptionPane.INFORMATION_MESSAGE);
    }

    private void helpWaoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        JOptionPane.showMessageDialog(jTabbedPane1, uitlegWao,
                "Toelichting WAO",JOptionPane.INFORMATION_MESSAGE);
    }

    private void helpWajongMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        JOptionPane.showMessageDialog(jTabbedPane1, uitlegWajong,
                "Toelichting Wajong",JOptionPane.INFORMATION_MESSAGE);
    }

    private void helpSamenloopMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        JOptionPane.showMessageDialog(jTabbedPane1, uitlegSamenloop,
                "Toelichting Samenloop",JOptionPane.INFORMATION_MESSAGE);
    }

    private void basisgegevensWajongComponentAdded(java.awt.event.ContainerEvent evt) {
        garantiebedragTextfield.setVisible(false);
        gbHoogtePerDagLabel.setVisible(false);
        loonwaardeLabel.setVisible(false);
        loonwaardePercentageTextfield.setVisible(false);
    }

    // eigen methoden
    private void resetWaoInkomstenPanel() {
        inkomstenCheckbox.setSelected(false);
        waoInkomstenPaneel.setVisible(false);
        GuiUtil.reset(maandKeuzeComboBox);
        GuiUtil.reset(jaarKeuzeComboBox);
        GuiUtil.reset(waoInkomstenTextfield);
        GuiUtil.reset(maxWaoUitkeringTextfield);
        GuiUtil.reset(berekendWaoUitkeringTextfield);
        inkMndRadioButtonWao.setSelected(true);
        waoBerekeningInfoLabel1.setText("Vul de gegevens in over de maand waarin u uw uitkering wilt berekenen, en klik op \"Bereken uitkering\".");
        waoBerekeningInfoLabel2.setText("");
    }

    private void resetWajongInkomstenPanel() {
        wajongInkomstenPaneel.setVisible(false);
        wajongInkomstenCheckbox.setSelected(false);
        GuiUtil.reset(wajongMaandKeuzeComboBox);
        GuiUtil.reset(wajongJaarKeuzeComboBox);
        GuiUtil.reset(wajongInkomstenTextfield);
        GuiUtil.reset(wajongOverigeInkomstenTextfield);
        wajongOverigeInkomstenTextfield.setText("0"); // default waarde
        if (wajong != null) {
            wajong.setOverigeInkomstenPerDag("0"); // anders blijft deze doortellen bij meerdere berekeningen met dezelfde Wajong-gegevens.
        }
        GuiUtil.reset(maxWajongUitkeringTextfield);
        GuiUtil.reset(berekendWajongUitkeringTextfield);
        inkMndRadioButtonWajong.setSelected(true);
        inkMndRadioButtonWajong1.setSelected(true);
        wajongBerekeningInfoLabel1.setText("Vul de gegevens in over de maand waarin u uw uitkering wilt berekenen, en klik op \"Bereken uitkering\".");
        wajongBerekeningInfoLabel2.setText("");
    }

    // eigen variabelen
    private WaoUitkering wao = null;
    private WajongUitkering wajong = null;

    String[] uitlegAlgemeen = {"Deze tool helpt u met het schatten van de hoogte van uw uitkering. U kunt een \n"
            + "schatting maken voor een WAO-uitkering, of een Wajong-uitkering.\n ",
            "Heeft u een WAO-, én een Wajong-uitkering? Kijk dan in het Help-menu bij \n"
                    + "Samenloop hoe u deze tool kunt gebruiken. \n ",
            "Deze tool geeft u geen juiste schatting als u ziek bent, vervroegd pensioen heeft,\n"
                    + "of (ook) een werkloosheidsuitkering ontvangt.\n ",
            "U kunt altijd telefonisch contact opnemen met UWV als u meer uitleg wilt over \n"
                    + "de berekening van uw uitkering."};

    String[] uitlegWao = {"Vul uw uitkeringsklasse en uw rekendagloon dat geldt in de periode waarover u\n"
            + "uw uitkering wilt berekenen. Als u met inkomsten wilt rekenen moet u ook uw\n"
            + "maatmanloon invullen.\n ",
            "Nadat u uw basisgegevens heeft opgeslagen kunt u een maand en jaar kiezen,\n"
                    + "en aangeven of u inkomsten heeft.\n ",
            "Als u in loondienst werkt vindt u uw inkomsten die tellen voor uw WAO-uitkering\n"
                    + "op uw loonstrook als “SV-loon”, “Loon voor loonheffing”, “Heffingsloon”, of iets\n"
                    + "dergelijks. Ook de opbouw van vakantiegeld en een eindejaarsuitkering telt mee.\n ",
            "Als u zelfstandige bent gaan wij uit van uw fiscale winst. Dit is niet hetzelfde als\n"
                    + "uw belastbare winst. Vul uw fiscale winst per maand in, door het bedrag over het\n"
                    + "jaar te delen door 12.\n ",
            "Neem contact op met UWV als u twijfelt welke inkomsten meetellen en een\n"
                    + "preciezere schatting wilt.\n ",
            "Als u alles heeft ingevuld klikt u op “Bereken uitkering”."};

    String[] uitlegWajong = {"Deze tool berekent uw Wajong-uitkering als u 21 jaar of ouder bent.\n ",
            "Vul in of u arbeidsvermogen heeft of niet. Als u een garantiebedrag heeft, vul\n"
                    + "dan de hoogte van uw garantiebedrag per dag in. Als u werkt met\n"
                    + "loondispensatie, vul dan het percentage van uw arbeidsprestatie in.\n ",
            "Nadat u uw basisgegevens heeft opgeslagen kunt u een maand en\n"
                    + "jaar kiezen, en aangeven of u inkomsten heeft.\n ",
            "Als u in loondienst werkt vindt u uw inkomsten die tellen voor uw Wajong-\n"
                    + "uitkering op uw loonstrook als “SV-loon”, “Loon voor loonheffing”,\n"
                    + "“Heffingsloon”, of iets dergelijks. Ook de opbouw van een eventuele\n"
                    + "eindejaarsuitkering telt mee. Vakantiegeld telt niet mee voor de berekening\n"
                    + "van uw Wajong-uitkering.\n ",
            "Als u zelfstandige bent gaan wij uit van uw fiscale winst. Dit is niet hetzelfde als\n"
                    + "uw belastbare winst. Vul uw fiscale winst per maand in, door het bedrag over\n"
                    + "het jaar te delen door 12. Verlaag dit bedrag met 8% theoretisch vakantiegeld.\n ",
            "Neem contact op met UWV als u twijfelt welke inkomsten meetellen of een\n"
                    + "preciezere schatting wilt.\n ",
            "Overige inkomsten gebruikt u als u naast uw Wajong-uitkering ook een andere\n"
                    + "uitkering heeft, óf als u bij meerdere werkgevers werkt en niet al uw\n"
                    + "werkgevers loondispensatie hanteren. Vul uw inkomsten bij de werkgever(s)\n"
                    + "mét loondispensatie in het veld voor “Inkomsten uit werk”, en uw inkomsten\n"
                    + "bij uw werkgever(s) zonder loondispensatie in het veld voor “Overige\n"
                    + "inkomsten”.\n ",
            "Als u alles heeft ingevuld klikt u op “Bereken uitkering”."};

    String[] uitlegSamenloop = {
            "Als u een WAO-, én een Wajong-uitkering heeft, kunt u deze tool nog steeds\n"
                    + "gebruiken om uw uitkeringen te schatten.\n ",
            "U rekent eerst uw WAO-uitkering uit. Vervolgens vult u bij de berekening van\n"
                    + "uw Wajong-uitkering bij “Overige inkomsten” het bedrag aan WAO per maand\n"
                    + "in. Let op dat u voor de WAO uw inkomsten uit werk inclusief vakantiegeld\n"
                    + "invult, en bij de Wajong exclusief vakantiegeld.\n ",
            "Uw totale uitkering is het bedrag aan WAO, plus het bedrag aan Wajong.\n ",
            "Het is mogelijk een berekening te maken voor Wajong + WW en Wajong + ZW,\n"
                    + "door de WW en/of ZW net als hierboven beschreven voor WAO te vullen bij\n"
                    + "“Overige inkomsten”.\n ",
            "Voor andere combinaties van uitkeringen geeft deze rekenhulp u niet het juiste\n"
                    + "bedrag. Neem contact op met UWV voor een schatting in uw situatie."};


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JMenuItem afsluitenMenuItem;
    private javax.swing.JCheckBox arbeidsvermogenCheckBox;
    private javax.swing.JPanel basisgegevensWajong;
    private javax.swing.JPanel basisgegevensWao;
    private javax.swing.JMenuItem berekenWajongMenuItem;
    private javax.swing.JButton berekenWajongUitkeringButton;
    private javax.swing.JMenuItem berekenWaoMenuItem;
    private javax.swing.JButton berekenWaoUitkeringButton;
    private javax.swing.JTextField berekendWajongUitkeringTextfield;
    private javax.swing.JTextField berekendWaoUitkeringTextfield;
    private javax.swing.JPanel berekeningWajong;
    private javax.swing.JPanel berekeningWao;
    private javax.swing.ButtonGroup buttonGroupLoonperiodeKeuze;
    private javax.swing.ButtonGroup buttonGroupLoonperiodeWajongOverig;
    private javax.swing.ButtonGroup buttonGroupLoonperiodeWajongWerk;
    private javax.swing.JCheckBox garantiebedragCheckBox;
    private javax.swing.JTextField garantiebedragTextfield;
    private javax.swing.JLabel gbHoogtePerDagLabel;
    private javax.swing.JMenuItem helpAlgemeenMenuItem;
    private javax.swing.JMenuItem helpSamenloopMenuItem;
    private javax.swing.JMenuItem helpWajongMenuItem;
    private javax.swing.JMenuItem helpWaoMenuItem;
    private javax.swing.JRadioButton ink4wkRadioButtonWajong;
    private javax.swing.JRadioButton ink4wkRadioButtonWajong1;
    private javax.swing.JRadioButton ink4wkRadioButtonWao;
    private javax.swing.JRadioButton inkMndRadioButtonWajong;
    private javax.swing.JRadioButton inkMndRadioButtonWajong1;
    private javax.swing.JRadioButton inkMndRadioButtonWao;
    private javax.swing.JRadioButton inkWkRadioButtonWajong;
    private javax.swing.JRadioButton inkWkRadioButtonWajong1;
    private javax.swing.JRadioButton inkWkRadioButtonWao;
    private javax.swing.JCheckBox inkomstenCheckbox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jaarKeuzeComboBox;
    private javax.swing.JComboBox<String> klasseKeuzeComboBox;
    private javax.swing.JCheckBox loondispensatieCheckBox;
    private javax.swing.JLabel loonwaardeLabel;
    private javax.swing.JTextField loonwaardePercentageTextfield;
    private javax.swing.JComboBox<String> maandKeuzeComboBox;
    private javax.swing.JTextField maxWajongUitkeringTextfield;
    private javax.swing.JTextField maxWaoUitkeringTextfield;
    private javax.swing.JTextField mmlTextfield;
    private javax.swing.JButton nieuweWajongBerekeningButton;
    private javax.swing.JButton nieuweWaoBerekeningButton;
    private javax.swing.JTextField rdagloonTextfield;
    private javax.swing.JButton wajongBasisOpslaanButton;
    private javax.swing.JButton wajongBasisWissenButton;
    private javax.swing.JLabel wajongBerekeningInfoLabel1;
    private javax.swing.JLabel wajongBerekeningInfoLabel2;
    private javax.swing.JLabel wajongGegevensLabel1;
    private javax.swing.JLabel wajongGegevensLabel2;
    private javax.swing.JLabel wajongGegevensLabel3;
    private javax.swing.JCheckBox wajongInkomstenCheckbox;
    private javax.swing.JPanel wajongInkomstenPaneel;
    private javax.swing.JTextField wajongInkomstenTextfield;
    private javax.swing.JComboBox<String> wajongJaarKeuzeComboBox;
    private javax.swing.JComboBox<String> wajongMaandKeuzeComboBox;
    private javax.swing.JTextField wajongOverigeInkomstenTextfield;
    private javax.swing.JPanel wajongTab;
    private javax.swing.JButton waoBasisOpslaanButton;
    private javax.swing.JButton waoBasisWissenButton;
    private javax.swing.JLabel waoBerekeningInfoLabel1;
    private javax.swing.JLabel waoBerekeningInfoLabel2;
    private javax.swing.JLabel waoGegevensLabel1;
    private javax.swing.JLabel waoGegevensLabel2;
    private javax.swing.JLabel waoGegevensLabel3;
    private javax.swing.JPanel waoInkomstenPaneel;
    private javax.swing.JTextField waoInkomstenTextfield;
    private javax.swing.JPanel waoTab;
    // End of variables declaration
}
